name: Deploy to Namecheap VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install and build
        run: |
          npm ci
          npm run build

      - name: Deploy files with rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete --exclude=node_modules --exclude=.env --exclude=firebase-service-account.json
          path: build/
          remote_path: /home/dumomvte/eventful-api.dumostech.com/
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SSH_KEY }}
          remote_port: ${{ secrets.SSH_PORT }}

      - name: Install dependencies and restart on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: dumomvte
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd /home/dumomvte/eventful-api.dumostech.com
            npm install --production
            
            # Create .env if it doesn't exist
            if [ ! -f .env ]; then
              echo "PORT=8000" > .env
              echo "NODE_ENV=production" >> .env
              echo "FIREBASE_SERVICE_ACCOUNT=./firebase-service-account.json" >> .env
              echo "⚠️  Created default .env file - update it with your variables!"
            fi
            
            # Create Firebase service account JSON from secret
            echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > firebase-service-account.json
            chmod 600 firebase-service-account.json
            
            # Install PM2 globally if not installed
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
              pm2 startup systemd -u dumomvte --hp /home/dumomvte
            fi
            
            # Restart or start the app
            if pm2 describe eventful-api > /dev/null 2>&1; then
              pm2 restart eventful-api
            else
              pm2 start server.js --name eventful-api
            fi
            pm2 save

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
            echo "🌐 Visit: https://eventful-api.dumostech.com"
          else
            echo "❌ Deployment failed"
            exit 1
          fi